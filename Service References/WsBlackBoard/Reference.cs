//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Consumir_Aplicacion.WsBlackBoard {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CodePageDataItem", Namespace="http://schemas.datacontract.org/2004/07/System.Globalization")]
    [System.SerializableAttribute()]
    public partial class CodePageDataItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string m_bodyNameField;
        
        private int m_dataIndexField;
        
        private uint m_flagsField;
        
        private string m_headerNameField;
        
        private int m_uiFamilyCodePageField;
        
        private string m_webNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_bodyName {
            get {
                return this.m_bodyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_bodyNameField, value) != true)) {
                    this.m_bodyNameField = value;
                    this.RaisePropertyChanged("m_bodyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_dataIndex {
            get {
                return this.m_dataIndexField;
            }
            set {
                if ((this.m_dataIndexField.Equals(value) != true)) {
                    this.m_dataIndexField = value;
                    this.RaisePropertyChanged("m_dataIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public uint m_flags {
            get {
                return this.m_flagsField;
            }
            set {
                if ((this.m_flagsField.Equals(value) != true)) {
                    this.m_flagsField = value;
                    this.RaisePropertyChanged("m_flags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_headerName {
            get {
                return this.m_headerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_headerNameField, value) != true)) {
                    this.m_headerNameField = value;
                    this.RaisePropertyChanged("m_headerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_uiFamilyCodePage {
            get {
                return this.m_uiFamilyCodePageField;
            }
            set {
                if ((this.m_uiFamilyCodePageField.Equals(value) != true)) {
                    this.m_uiFamilyCodePageField = value;
                    this.RaisePropertyChanged("m_uiFamilyCodePage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_webName {
            get {
                return this.m_webNameField;
            }
            set {
                if ((object.ReferenceEquals(this.m_webNameField, value) != true)) {
                    this.m_webNameField = value;
                    this.RaisePropertyChanged("m_webName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WsBlackBoard.ISwnBlackBoard")]
    public interface ISwnBlackBoard {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/GenerarArchivoCsv", ReplyAction="http://tempuri.org/ISwnBlackBoard/GenerarArchivoCsvResponse")]
        void GenerarArchivoCsv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/GenerarArchivoCsv", ReplyAction="http://tempuri.org/ISwnBlackBoard/GenerarArchivoCsvResponse")]
        System.Threading.Tasks.Task GenerarArchivoCsvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/GenerarArchivo", ReplyAction="http://tempuri.org/ISwnBlackBoard/GenerarArchivoResponse")]
        void GenerarArchivo(string nombreArchivo, byte[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/GenerarArchivo", ReplyAction="http://tempuri.org/ISwnBlackBoard/GenerarArchivoResponse")]
        System.Threading.Tasks.Task GenerarArchivoAsync(string nombreArchivo, byte[] array);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ObtenerRutaDirectorio", ReplyAction="http://tempuri.org/ISwnBlackBoard/ObtenerRutaDirectorioResponse")]
        string ObtenerRutaDirectorio(string astrRuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ObtenerRutaDirectorio", ReplyAction="http://tempuri.org/ISwnBlackBoard/ObtenerRutaDirectorioResponse")]
        System.Threading.Tasks.Task<string> ObtenerRutaDirectorioAsync(string astrRuta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ConectarClienteSftp", ReplyAction="http://tempuri.org/ISwnBlackBoard/ConectarClienteSftpResponse")]
        bool ConectarClienteSftp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ConectarClienteSftp", ReplyAction="http://tempuri.org/ISwnBlackBoard/ConectarClienteSftpResponse")]
        System.Threading.Tasks.Task<bool> ConectarClienteSftpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ObtenerDocumentos", ReplyAction="http://tempuri.org/ISwnBlackBoard/ObtenerDocumentosResponse")]
        string ObtenerDocumentos(System.IO.StreamReader sb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISwnBlackBoard/ObtenerDocumentos", ReplyAction="http://tempuri.org/ISwnBlackBoard/ObtenerDocumentosResponse")]
        System.Threading.Tasks.Task<string> ObtenerDocumentosAsync(System.IO.StreamReader sb);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISwnBlackBoardChannel : Consumir_Aplicacion.WsBlackBoard.ISwnBlackBoard, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SwnBlackBoardClient : System.ServiceModel.ClientBase<Consumir_Aplicacion.WsBlackBoard.ISwnBlackBoard>, Consumir_Aplicacion.WsBlackBoard.ISwnBlackBoard {
        
        public SwnBlackBoardClient() {
        }
        
        public SwnBlackBoardClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SwnBlackBoardClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwnBlackBoardClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SwnBlackBoardClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void GenerarArchivoCsv() {
            base.Channel.GenerarArchivoCsv();
        }
        
        public System.Threading.Tasks.Task GenerarArchivoCsvAsync() {
            return base.Channel.GenerarArchivoCsvAsync();
        }
        
        public void GenerarArchivo(string nombreArchivo, byte[] array) {
            base.Channel.GenerarArchivo(nombreArchivo, array);
        }
        
        public System.Threading.Tasks.Task GenerarArchivoAsync(string nombreArchivo, byte[] array) {
            return base.Channel.GenerarArchivoAsync(nombreArchivo, array);
        }
        
        public string ObtenerRutaDirectorio(string astrRuta) {
            return base.Channel.ObtenerRutaDirectorio(astrRuta);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerRutaDirectorioAsync(string astrRuta) {
            return base.Channel.ObtenerRutaDirectorioAsync(astrRuta);
        }
        
        public bool ConectarClienteSftp() {
            return base.Channel.ConectarClienteSftp();
        }
        
        public System.Threading.Tasks.Task<bool> ConectarClienteSftpAsync() {
            return base.Channel.ConectarClienteSftpAsync();
        }
        
        public string ObtenerDocumentos(System.IO.StreamReader sb) {
            return base.Channel.ObtenerDocumentos(sb);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerDocumentosAsync(System.IO.StreamReader sb) {
            return base.Channel.ObtenerDocumentosAsync(sb);
        }
    }
}
