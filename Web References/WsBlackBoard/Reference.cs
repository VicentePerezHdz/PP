//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Consumir_Aplicacion.WsBlackBoard {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ISwnBlackBoard", Namespace="http://tempuri.org/")]
    public partial class BlackBoard : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GenerarArchivoCsvOperationCompleted;
        
        private System.Threading.SendOrPostCallback GenerarArchivoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ObtenerRutaDirectorioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConectarClienteSftpOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BlackBoard() {
            this.Url = global::Consumir_Aplicacion.Properties.Settings.Default.Consumir_Aplicacion_WsBlackBoard_BlackBoard;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GenerarArchivoCsvCompletedEventHandler GenerarArchivoCsvCompleted;
        
        /// <remarks/>
        public event GenerarArchivoCompletedEventHandler GenerarArchivoCompleted;
        
        /// <remarks/>
        public event ObtenerRutaDirectorioCompletedEventHandler ObtenerRutaDirectorioCompleted;
        
        /// <remarks/>
        public event ConectarClienteSftpCompletedEventHandler ConectarClienteSftpCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISwnBlackBoard/GenerarArchivoCsv", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarArchivoCsv() {
            this.Invoke("GenerarArchivoCsv", new object[0]);
        }
        
        /// <remarks/>
        public void GenerarArchivoCsvAsync() {
            this.GenerarArchivoCsvAsync(null);
        }
        
        /// <remarks/>
        public void GenerarArchivoCsvAsync(object userState) {
            if ((this.GenerarArchivoCsvOperationCompleted == null)) {
                this.GenerarArchivoCsvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarArchivoCsvOperationCompleted);
            }
            this.InvokeAsync("GenerarArchivoCsv", new object[0], this.GenerarArchivoCsvOperationCompleted, userState);
        }
        
        private void OnGenerarArchivoCsvOperationCompleted(object arg) {
            if ((this.GenerarArchivoCsvCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarArchivoCsvCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISwnBlackBoard/GenerarArchivo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GenerarArchivo([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")] string[] csvResultado) {
            this.Invoke("GenerarArchivo", new object[] {
                        csvResultado});
        }
        
        /// <remarks/>
        public void GenerarArchivoAsync(string[] csvResultado) {
            this.GenerarArchivoAsync(csvResultado, null);
        }
        
        /// <remarks/>
        public void GenerarArchivoAsync(string[] csvResultado, object userState) {
            if ((this.GenerarArchivoOperationCompleted == null)) {
                this.GenerarArchivoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGenerarArchivoOperationCompleted);
            }
            this.InvokeAsync("GenerarArchivo", new object[] {
                        csvResultado}, this.GenerarArchivoOperationCompleted, userState);
        }
        
        private void OnGenerarArchivoOperationCompleted(object arg) {
            if ((this.GenerarArchivoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GenerarArchivoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISwnBlackBoard/ObtenerRutaDirectorio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ObtenerRutaDirectorio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string astrRuta) {
            object[] results = this.Invoke("ObtenerRutaDirectorio", new object[] {
                        astrRuta});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ObtenerRutaDirectorioAsync(string astrRuta) {
            this.ObtenerRutaDirectorioAsync(astrRuta, null);
        }
        
        /// <remarks/>
        public void ObtenerRutaDirectorioAsync(string astrRuta, object userState) {
            if ((this.ObtenerRutaDirectorioOperationCompleted == null)) {
                this.ObtenerRutaDirectorioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnObtenerRutaDirectorioOperationCompleted);
            }
            this.InvokeAsync("ObtenerRutaDirectorio", new object[] {
                        astrRuta}, this.ObtenerRutaDirectorioOperationCompleted, userState);
        }
        
        private void OnObtenerRutaDirectorioOperationCompleted(object arg) {
            if ((this.ObtenerRutaDirectorioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ObtenerRutaDirectorioCompleted(this, new ObtenerRutaDirectorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ISwnBlackBoard/ConectarClienteSftp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConectarClienteSftp(out bool ConectarClienteSftpResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ConectarClienteSftpResultSpecified) {
            object[] results = this.Invoke("ConectarClienteSftp", new object[0]);
            ConectarClienteSftpResult = ((bool)(results[0]));
            ConectarClienteSftpResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void ConectarClienteSftpAsync() {
            this.ConectarClienteSftpAsync(null);
        }
        
        /// <remarks/>
        public void ConectarClienteSftpAsync(object userState) {
            if ((this.ConectarClienteSftpOperationCompleted == null)) {
                this.ConectarClienteSftpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConectarClienteSftpOperationCompleted);
            }
            this.InvokeAsync("ConectarClienteSftp", new object[0], this.ConectarClienteSftpOperationCompleted, userState);
        }
        
        private void OnConectarClienteSftpOperationCompleted(object arg) {
            if ((this.ConectarClienteSftpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConectarClienteSftpCompleted(this, new ConectarClienteSftpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GenerarArchivoCsvCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void GenerarArchivoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ObtenerRutaDirectorioCompletedEventHandler(object sender, ObtenerRutaDirectorioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ObtenerRutaDirectorioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ObtenerRutaDirectorioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    public delegate void ConectarClienteSftpCompletedEventHandler(object sender, ConectarClienteSftpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2046.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConectarClienteSftpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConectarClienteSftpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool ConectarClienteSftpResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool ConectarClienteSftpResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591